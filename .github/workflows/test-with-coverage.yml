name: Test with Coverage

on:
  workflow_call:
    inputs:
      distribution:
        description: 'Java distribution. See the list of supported distributions in README file'
        default: 'temurin'
        type: string
        required: false
      java-version:
        description: 'The Java version to set up. Takes a whole or semver Java version. See examples of supported syntax in README file'
        default: '17'
        type: string
        required: false
      cache:
        description: 'Name of the build platform to cache dependencies. It can be "maven", "gradle" or "sbt".'
        default: 'gradle'
        type: string
        required: false
      coverage-type:
        description: 'File type for code coverage report'
        default: 'cobertura'
        type: string
        required: false
      path:
        description: 'Coverage report file path'
        default: 'build/reports/cobertura.xml'
        type: string
        required: false
    secrets:
      cc-token:
        description: 'Token to use for interacting with CodeClimate'
        required: true

jobs:
  test_with_coverage:
    name: Test with Coverage
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - run: curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
      - run: chmod +x ./cc-test-reporter
      - name: Notify CodeClimate Before Build
        run: ./cc-test-reporter before-build
        env:
          CC_TEST_REPORTER_ID: ${{ secrets.cc-token }}
      - uses: actions/setup-java@v3
        with:
          distribution: ${{ inputs.distribution }}
          java-version: ${{ inputs.java-version }}
          cache: ${{ inputs.cache }}
      - uses: gradle/wrapper-validation-action@v1
      - uses: gradle/gradle-build-action@v2
        with:
          arguments: jacotura
          cache-read-only: ${{ !github.ref_protected }}
          gradle-home-cache-cleanup: true
      - name: Format to CodeCoverage
        run: ./cc-test-reporter format-coverage ${{ inputs.path }} --input-type ${{ inputs.coverage-type }} --output ./codeclimate.json
        env:
          CC_TEST_REPORTER_ID: ${{ secrets.cc-token }}
      - name: Submit to CodeCoverage
        run: ./cc-test-reporter upload-coverage --input ./codeclimate.json
        env:
          CC_TEST_REPORTER_ID: ${{ secrets.cc-token }}
